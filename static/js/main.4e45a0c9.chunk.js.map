{"version":3,"sources":["components/CharacterCard/index.js","components/Title/index.js","components/Navbar/index.js","App.js","index.js"],"names":["CharacterCard","props","className","key","id","value","name","onClick","e","clickValue","shuffle","score","alt","src","image","width","height","Title","NavBar","App","state","characters","userSelect","handleClick","preventDefault","target","console","log","setState","scoring","sort","a","b","Math","random","this","map","character","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+iFAaeA,MAVf,SAAuBC,GACnB,OACI,yBAAKC,UAAU,aAAaC,IAAOF,EAAMG,IACrC,4BAAQF,UAAU,SAASG,MAAOJ,EAAMK,KAAMC,QAAW,SAACC,GAAOP,EAAMQ,WAAWD,GAAIP,EAAMS,UAAUT,EAAMU,UACxG,yBAAKL,KAAML,EAAMK,KAAMM,IAAOX,EAAMK,KAAMO,IAAKZ,EAAMa,MAAOC,MAAM,MAAMC,OAAO,W,qBCOhFC,MAXf,SAAehB,GACX,OACI,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,aAAd,mBACA,uBAAGA,UAAU,QAAb,6K,MCODgB,MAZf,SAAgBjB,GACZ,OACI,yBAAKC,UAAU,mDACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,IAAd,eAEA,uCAAY,8BAAOD,EAAMU,WC0D1BQ,E,2MAzDbC,MAAQ,CACNC,aACAV,MAAO,EACPW,WAAY,I,EAGdC,YAAc,SAACf,GACbA,EAAEgB,iBACF,IAAMf,EAAaD,EAAEiB,OAAOnB,KAC5BoB,QAAQC,IAAI,kBAAoBlB,GAEhC,EAAKmB,SAAS,CAACN,WAAW,GAAD,mBAAM,EAAKF,MAAME,YAAjB,CAA6Bb,MACtDiB,QAAQC,IAAI,EAAKP,MAAME,a,EAIzBO,QAAU,WACR,EAAKD,SAAS,CAAEjB,MAAO,EAAKS,MAAMT,MAAO,K,EAI3CD,QAAU,WACR,IAAMW,EAAa,EAAKD,MAAMC,WAAWS,MAAK,SAASC,EAAGC,GACxD,MAAO,GAAMC,KAAKC,YAGpBR,QAAQC,IAAIN,GACZ,EAAKO,SAAU,CAACP,gB,wEAKR,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,CACAV,MAASwB,KAAKf,MAAMT,QACpB,kBAAC,EAAD,MACA,yBAAKT,UAAU,qBACb,yBAAKA,UAAU,MAAOC,IAAOgC,KAAKf,MAAMC,WAAWjB,IAChD+B,KAAKf,MAAMC,WAAWe,KAAI,SAAAC,GAAS,OAClC,kBAAE,EAAF,CACAlC,IAAOkC,EAAUjC,GACjBK,WAAc,EAAKc,YACjBb,QAAW,EAAKA,QAChBJ,KAAM+B,EAAU/B,KAChBQ,MAAOuB,EAAUvB,MACjBH,MAAS,EAAKkB,oB,GAjDZS,IAAMC,WCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4e45a0c9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n    return (        \n        <div className='card col-4' key = {props.id}>\n            <button className=\"button\" value={props.name} onClick = {(e) => {props.clickValue(e); props.shuffle();props.score() }}>\n                <img name={props.name} alt = {props.name} src={props.image} width='100' height='100' />\n            </button>\n        </div>\n    );\n}\n\nexport default CharacterCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container title\">\n                <h1 className=\"display-4\">The Clicky Game</h1>\n                <p className=\"lead\">Clicking on a South Park character will shuffle all the characters around. Don't click on the same character twice, or you will lose. So lets see how far you can get.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Title;","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props) {\n    return (\n        <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n            <div className=\"container\">\n                <h3 className=\"\">Clicky Game</h3>\n                {/* <h3 className=\"result\"></h3> */}\n                <h3> Score: <span>{props.score}</span></h3>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport './App.css';\nimport characters from \"./characters.json\";\nimport Title from \"./components/Title\"\nimport NavBar from \"./components/Navbar\"\n\n\nclass App extends React.Component {\n  \n  state = {\n    characters,\n    score: 0,\n    userSelect: []\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const clickValue = e.target.name;\n    console.log(\"You clicked on \" + clickValue); \n    \n    this.setState({userSelect: [...this.state.userSelect, clickValue]})\n    console.log(this.state.userSelect)\n  }\n\n  // Keep the score\n  scoring = () => {\n    this.setState({ score: this.state.score +1 });\n  }\n  \n  // Function to shuffle the characters once clicked on\n  shuffle = () => {\n    const characters = this.state.characters.sort(function(a, b) {\n      return 0.5 - Math.random()\n       \n    });\n    console.log(characters)\n    this.setState( {characters} ); \n    // console.log(this.state.characters)\n  };\n\n\n  render() {\n    return (\n      <>\n        <NavBar \n        score = {this.state.score}/>\n        <Title />\n        <div className='container wrapper'>\n          <div className='row'  key = {this.state.characters.id}>\n            {this.state.characters.map(character => (\n              < CharacterCard\n              key = {character.id}\n              clickValue = {this.handleClick}\n                shuffle = {this.shuffle}\n                name={character.name}\n                image={character.image}\n                score = {this.scoring}\n              />\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}